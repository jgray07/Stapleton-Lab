unique(as.numeric(org[1,18446:19957]))
unique(as.numeric(org[1,18446:19956]))
19956-18445
org[1,18446:19956] <- 10
org[1,18446:19956]
write_csv(org,file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
?write_csv
write_csv(org,path = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
table(org[1,])
table(as.numeric(org[1,]))
table(as.numeric(org[1,-c(1,2)]))
unique(as.numeric(org[1,-c(1,2)]))
org[1:6,1:6]
org[1:2,1:2] <- ""
org[1:6,1:6]
ratio <- org[-c(1,2),1]/org[-c(1,2),2]
unique(org[-c(1,2),1])
ratio <- as.numeric(org[-c(1,2),1])/as.numeric(org[-c(1,2),2])
as.numeric(org[-c(1,2),1])
str(org[,1])
numeric(org[-c(1,2),1])
?numeric
str(org[-c(1,2),1])
as.numeric(org[-c(1,2),1])
as.vector(org[-c(1,2),1])
str(as.vector(org[-c(1,2),1]))
as.numeric(as.vector(org[-c(1,2),1]))
map(org[-1:-2,1])
map(org[-1:-2,1], as.numeric)
unsp <0 map(org[-1:-2,1], as.numeric)
unsp <- map(org[-1:-2,1], as.numeric)
unsp
unlist(unsp)
ratio <- unlist(map(org[-1:-2,1]))/unlist(map(org[-1:-2,2]))
ratio <- unlist(map(org[-1:-2,1], as.numeric))/unlist(map(org[-1:-2,2], as.numeric))
ratio
names(ratio) <- c()
ratio
org[-1:-2,2] <- ratio
org[1:6,1:6]
org <- org[,-1]
colnames(org)[2] <- "Ratio"
org[1:6,1:6]
org <- read_csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
org[1,18446:19956] <- 10
org[1:2,1:2] <- ""
ratio <- unlist(map(org[-1:-2,1], as.numeric))/unlist(map(org[-1:-2,2], as.numeric))
names(ratio) <- c()
org[-1:-2,2] <- ratio
org <- org[,-1]
colnames(org)[1] <- "Ratio"
org[1:6,1:6]
write_csv(org,path = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-Object-Ratio.csv")
library(beepr)
lapply(1:11, function(x){
beep(sound = x)
})
lapply(1:11, function(x){
beep(sound = x)
})
?tryCatch
dat <- read.cross(file = "C:/Users/Thomas/Documents/GitHub/Stapleton-Lab/Manching\ BayesNet/SimulatedResponse.csv")
dat <- read.csv(file = "C:/Users/Thomas/Documents/GitHub/Stapleton-Lab/Manching\ BayesNet/SimulatedResponse.csv")
dat[1:6,1:6]
dat[1:2,1:4] <- ""
dat[1:6,1:6]
n <- dim(dat)[2]
#####Howell Visualization
dat <- read.csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/HowellvQTL_Ratio_LOD,Pvals,EffectSizes.csv")
dat <- dat[,-1]
colnames(dat)
plot(dat$Mean.P.Value)
#####Howell Visualization
library('tidyverse')
ggplot(data = dat) +
geom_smooth(aes(index,dat$Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(dat$Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(x = Position..cM., y = Mean.P.Value), se = F)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value), se = F)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_abline(intercept = .05)
?geom_abline
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_line(intercept = .05)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(intercept = .05)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, aes(color = 'red'))
?geom_hline
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
?smooth
smooth(dat$Joint.P.Value, kind = 3)
smooth(dat$Joint.P.value[which(dat$Joint.P.Value)], kind = 3)
smooth(dat$Joint.P.value[which(!is.na(dat$Joint.P.Value))], kind = 3)
which(!is.na(dat$Joint.P.Value))
str(which(!is.na(dat$Joint.P.Value)))
dat$Joint.P.Value %>% !is.na()
dat$Joint.P.value[which(!is.na(dat$Joint.P.Value))]
is.na(dat$Joint.P.Value)
which(is.na(dat$Joint.P.Value))
dat$Joint.P.value[-which(is.na(dat$Joint.P.Value))]
str(dat$Joint.P.Value)
dat$Joint.P.Value[-3]
str(which(is.na(dat$Joint.P.Value)))
dat$Joint.P.value[-c(which(is.na(dat$Joint.P.Value)))]
dat$Joint.P.Value[c(7177,10990,13880)]
dat$Joint.P.Value[-c(7177,10990,13880)]
which(is.na(dat$Joint.P.Value))
nas <- which(is.na(dat$Joint.P.Value))
dat$Joint.P.Value[-nas]
smooth(dat$Joint.P.Value[-nas])
smooth(dat$Joint.P.Value[-nas], kind = '3')
yval <- smooth(dat$Joint.P.Value[-nas], kind = '3')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
length(yval)
ggplot() +
geom_point(aes(x = dat$Position..cM., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM[-nas]., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM[-nas]., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM.[-nas], y = yval)) +
geom_hline(yintercept = .05, color = 'red')
yval
class(yval)
as.numeric(yval)
ggplot() +
geom_point(aes(x = dat$Position..cM.[-nas], y = as.numeric(yval))) +
geom_hline(yintercept = .05, color = 'red')
which(yval < .05)
yval[which(yval < .05)]
diff(which(yval < .05))
which(diff(which(yval < .05)) != 1)
diff(which(diff(which(yval < .05)) != 1))
min(yval[1:4])
sig <- which(yval < .05)
min(yval[sig][1:4])
yval
yval[sig]
yval[sig][1:4]
sig
which(yval[sig][1:4] == min(yval[sig][1:4]))
which(yval[sig][5:6] == min(yval[sig][5:6]))
yval[sig][5:6]
repr <- c()
repr <- c(repr,1)
repr <- c(repr,5)
sig
repr <- c(repr,7)
which(yval[sig][8:9] == min(yval[sig][8:9]))
repr <- c(repr,8)
which(yval[sig][10:11] == min(yval[sig][10:11]))
repr <- c(repr,10)
repr
sig[10]
sig[12:14]
sig[12:1]
sig[12:15]
which(yval[sig][12:15] == min(yval[sig][12:15]))
repr <- c(repr,12)
sig
which(yval[sig][16:17] == min(yval[sig][16:17]))
repr <- c(repr,16)
repr
sig[repr]
library('qtl')
library('vqtl')
?mean_var_plot_model_based
cross <- read.cross(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-Object-Ratio.csv")
sig[repr][1]
dat$SNP.Name[351]
x <- 1
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]))
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]),
genotype.names = c("AA","BB"))
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]),
genotype.names = c("AA","BB"))
})
nas
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
sig[repr]
x <- 7
sig[repr][x]
dat$SNP.Name[18441]
x <- sig[repr]
as.character(dat$SNP.Name[-nas][x])
length(dat$SNP.Name[nas])
length(dat$SNP.Name[-nas])
legth(yval)
length(yval)
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
sig[repr]
dat$SNP.Name[-nas][18441]
class(dat$SNP.Name[-nas][18441])
?dev
?dev.off
dev.cur(0)
dev.cur()
dev.list
dev.list()
?dev.new
?pdf
pdf(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/RatioSNPs.pdf")
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
dev.off()
newdat <- read.csv(file = url("https://raw.githubusercontent.com/michael-byrd/Stapleton-Lab/development/Manching%20BayesNet/JulyWork/Manching_vQTL_Aug-24-18.csv"))
head(newdat)
#install.packages('tidyverse')
library('tidyverse')
#Data Read in
fn <- "https://raw.githubusercontent.com/tbillman/Wang499/master/OrgNPVs2.csv"
dat <- read_csv(file = url(fn))
names(dat) <- make.names(names(dat))
str(dat)
attach(dat)
dat$FirstPmt <- as.factor(FirstPmt)
dat$FirstTimeHomebuyer <- as.factor(FirstTimeHomebuyer)
dat$Maturity.Date <- as.factor(Maturity.Date)
dat$MSA.Code <- as.factor(MSA.Code)
dat$Occupancy.Status <- as.factor(Occupancy.Status)
dat$Channel <- as.factor(Channel)
dat$PPM <- as.factor(PPM)
dat$Product <- as.factor(Product)
dat$State <- as.factor(State)
dat$Property.Type <- as.factor(Property.Type)
dat$Postal.Code <- as.factor(Postal.Code)
dat$Loan.Purpose <- as.factor(Loan.Purpose)
dat$Seller.Name <- as.factor(Seller.Name)
dat$Servicer.Name <- as.factor(Servicer.Name)
dat$Super.Conforming <- as.factor(Super.Conforming)
attach(dat)
#Removing variables without contrasts
dat<- dat[,-16]
dat<- dat[,-25]
#Linear Models
#We remove many variables that have too many levels
lm1 <- lm(NPV ~ . -FirstPmt -Maturity.Date -MSA.Code -State -Postal.Code
-Loan.Sequence.Number -Seller.Name -Servicer.Name, data = dat)
summary(lm1)
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
#keep significant covariates and NPV
which(names(dat) == "NPV")
sigdat <- dat[,c(keep,25)]
detach(dat)
rm(dat)
attach(sigdat)
lm2 <- lm(NPV ~ ., data = sigdat)
summary(lm2)
names(sigdat)
summary(lm1)
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
names(dat)[keep]
library('tidyverse')
#Data Read in
fn <- "https://raw.githubusercontent.com/tbillman/Wang499/master/OrgNPVs2.csv"
dat <- read_csv(file = url(fn))
names(dat) <- make.names(names(dat))
#Data Cleaning/Exploration
str(dat)
attach(dat)
dat$FirstPmt <- as.factor(FirstPmt)
dat$FirstTimeHomebuyer <- as.factor(FirstTimeHomebuyer)
dat$Maturity.Date <- as.factor(Maturity.Date)
dat$MSA.Code <- as.factor(MSA.Code)
dat$Occupancy.Status <- as.factor(Occupancy.Status)
dat$Channel <- as.factor(Channel)
dat$PPM <- as.factor(PPM)
dat$Product <- as.factor(Product)
dat$State <- as.factor(State)
dat$Property.Type <- as.factor(Property.Type)
dat$Postal.Code <- as.factor(Postal.Code)
dat$Loan.Purpose <- as.factor(Loan.Purpose)
dat$Seller.Name <- as.factor(Seller.Name)
dat$Servicer.Name <- as.factor(Servicer.Name)
dat$Super.Conforming <- as.factor(Super.Conforming)
attach(dat)
#Removing variables without contrasts
dat<- dat[,-16]
dat<- dat[,-25]
#Linear Models
#We remove many variables that have too many levels
lm1 <- lm(NPV ~ . -FirstPmt -Maturity.Date -MSA.Code -State -Postal.Code
-Loan.Sequence.Number -Seller.Name -Servicer.Name, data = dat)
summary(lm1)
#keep significant covariates and NPV
which(names(dat) %in% c(summary(lm1)$coefficients[keep,1],"NPV"))
summary(lm1)$coefficients[keep,1]
summary(lm1)
rownames(summary(lm1)$coefficients)
#keep significant covariates and NPV
which(names(dat) %in% c(rownames(summary(lm1)$coefficients)[keep],"NPV"))
names(dat)
sigdat <- dat[,keep]
names(sigdat)
rm(dat)
attach(sigdat)
lm2 <- lm(NPV ~ ., data = sigdat)
names(sigdat)
#keep significant covariates and NPV
which(names(dat) %in% c(rownames(summary(lm1)$coefficients)[keep],"NPV"))
fn <- "https://raw.githubusercontent.com/tbillman/Wang499/master/OrgNPVs2.csv"
dat <- read_csv(file = url(fn))
names(dat) <- make.names(names(dat))
#Data Cleaning/Exploration
str(dat)
attach(dat)
dat$FirstPmt <- as.factor(FirstPmt)
dat$FirstTimeHomebuyer <- as.factor(FirstTimeHomebuyer)
dat$Maturity.Date <- as.factor(Maturity.Date)
dat$MSA.Code <- as.factor(MSA.Code)
dat$Occupancy.Status <- as.factor(Occupancy.Status)
dat$Channel <- as.factor(Channel)
dat$PPM <- as.factor(PPM)
dat$Product <- as.factor(Product)
dat$State <- as.factor(State)
dat$Property.Type <- as.factor(Property.Type)
dat$Postal.Code <- as.factor(Postal.Code)
dat$Loan.Purpose <- as.factor(Loan.Purpose)
dat$Seller.Name <- as.factor(Seller.Name)
dat$Servicer.Name <- as.factor(Servicer.Name)
dat$Super.Conforming <- as.factor(Super.Conforming)
attach(dat)
#Removing variables without contrasts
dat<- dat[,-16]
dat<- dat[,-25]
#Linear Models
#We remove many variables that have too many levels
lm1 <- lm(NPV ~ . -FirstPmt -Maturity.Date -MSA.Code -State -Postal.Code
-Loan.Sequence.Number -Seller.Name -Servicer.Name, data = dat)
summary(lm1)
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
keep
length(keep)
keep[3] <- "FirstTimeHomebuyer"
keep[10] <- "Property.Type"
keep <- keep[-11:-12]
keep
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
#keep significant covariates and NPV
which(names(dat) %in% c(rownames(summary(lm1)$coefficients)[keep],
"FirstTimeHomebuyer","Property.Type","NPV"))
names(sigdat)
summary(lm1)$coefficients
#checking which we should keep
keep <- which(summary(lm1)$coefficients[,4] < .05)
keep3
keep[3]
keep
names(keep)
#keep significant covariates and NPV
which(names(dat) %in% c(names(keep),
"FirstTimeHomebuyer","Property.Type","NPV"))
#keep significant covariates and NPV
names(dat)[which(names(dat) %in% c(names(keep),
"FirstTimeHomebuyer","Property.Type","NPV"))]
#keep significant covariates and NPV
keep1 <- which(names(dat) %in% c(names(keep),
"FirstTimeHomebuyer","Property.Type","NPV"))
sigdat <- dat[,keep1]
names(sigdat)
summary(lm1)
detach(dat)
attach(sigdat)
lm2 <- lm(NPV ~ ., data = sigdat)
summary(lm2)
#Now with interaction terms
lm3 <- lm(NPV ~ . + .^2, data = sigdat)
summary(lm3)
plot(lm1)
par(mfrow = c(2,2))
plot(lm1)
plot(lm2)
plot(lm3)
summary(lm3)
summary(lm3)$coefficients[
which(summary(lm3)$coefficients[,4]< .05)
,]
summary(lm3)$coefficients[
which(summary(lm3)$coefficients[,4]< .05)
,]
summary(lm3)$coefficients[
which(summary(lm3)$coefficients[,4]< .05)
,]
summary(lm1)
summary(lm2)
summary(lm3)
library(vqtl)
read.csv(file.choose())
library("qtl")
library("vqtl")
rcsv<- read.csv(file = url("https://raw.githubusercontent.com/tbillman/Stapleton-Lab/master/vQTL%20Random%20and%20Family/data/tidied/Random2.csv"))
fcsv<- read.csv(file = url("https://raw.githubusercontent.com/tbillman/Stapleton-Lab/master/vQTL%20Random%20and%20Family/data/tidied/Family.csv"))
PlantHeight <- c(rcsv$height.in.,fcsv$PlantHeight)
fcsv[1:6,1:6]
fcsv <- fcsv[-1:-2,]
fcsv[1:6,1:6]
PlantHeight <- c(rcsv$height.in.,fcsv$PlantHeight)
TasselBranchNum <- c(rcsv$NumTasselBranches, fcsv$tasselbranchNum)
TasselBranchDeg <- c(rcsv$TasselBranchAngle.deg., fcsv$tasselbranchAngle_degrees)
gdat <- rbind(rcsv[,-1:-3], fcsv[,-1:-3])
RFcovar <- c("NA","NA", rep(0,dim(rcsv)[1]-2), rep(1,dim(fcsv)[1]))
fdat <- cbind(PlantHeight, TasselBranchNum, TasselBranchDeg, RFcovar, gdat)
fdat[1:6,1:6]
list.files()
getwd()
setwd("Stapleton-Lab")
setwd("GitHub")
setwd("Stapleton-Lab")
list.files()
setwd("vQTL Random and Family")
list.files()
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv")
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
fdat[2:3,1:4] <- ""
fdat[2:3,1:4]
fdat[2:3,1:4] <- "NA"
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
fdat <- cbind(PlantHeight, TasselBranchNum, TasselBranchDeg, RFcovar, gdat)
fdat[1:2,1:4] <- "NA"
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
fdat[1:2,1:4] <- NA
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
fdat <- cbind(PlantHeight, TasselBranchNum, TasselBranchDeg, RFcovar, gdat)
fdat[1:2,1:4] <- ""
write.csv(fdat, file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv",
row.names = F)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
cdat <- read.cross(
file = "C://Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL\ Random\ and\ Family/combined/combined.csv"
)
